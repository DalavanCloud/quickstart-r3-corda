{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Corda Template",
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [
                {
                    "Label": {
                        "default": "Network Configuration"
                    },
                    "Parameters": [
                        "VPCID",
                        "PublicSubnet1ID",
                        "PublicSubnet2ID",
                        "RemoteAccessCIDR"
                    ]
                },
                {
                    "Label": {
                        "default": "Corda EC2 Configuration"
                    },
                    "Parameters": [
                        "KeyPairName",
                        "CordaAccessCIDR",
                        "InstanceType"
                    ]
                },
                {
                    "Label": {
                        "default": "AWS Quick Start Configuration"
                    },
                    "Parameters": [
                        "QSS3BucketName",
                        "QSS3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "KeyPairName": {
                    "default": "Key Pair Name"
                },
                "PublicSubnet1ID": {
                    "default": "Public Subnet 1 ID"
                },
                "QSS3BucketName": {
                    "default": "Quick Start S3 Bucket Name"
                },
                "QSS3KeyPrefix": {
                    "default": "Quick Start S3 Key Prefix"
                },
                "RemoteAccessCIDR": {
                    "default": "Allowed SSH Access CIDR"
                },
                "CordaAccessCIDR": {
                    "default": "Allowed Application Access CIDR"
                },
                "VPCID": {
                    "default": "VPC ID"
                }
            }
        }
    },
    "Parameters": {
        "InstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge"
            ],
            "Default": "t2.micro",
            "Description": "Amazon EC2 instance type for the bastion instances",
            "Type": "String"
        },
        "KeyPairName": {
            "Description": "Enter a Public/private key pair. If you do not have one in this region, please create it before continuing",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "NumBastionHosts": {
            "AllowedValues": [
                "1",
                "2",
                "3",
                "4"
            ],
            "Default": "1",
            "Description": "Enter the number of bastion hosts to create",
            "Type": "String"
        },
        "PublicSubnet1ID": {
            "Description": "ID of the public subnet 1 that you want to provision the first bastion into (e.g., subnet-a0246dcd)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "PublicSubnet2ID": {
            "Description": "ID of the public subnet 2 you want to provision the second bastion into (e.g., subnet-e3246d8e)",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "QSS3BucketName": {
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Default": "aws-quickstart",
            "Description": "S3 bucket name for the Quick Start assets. Quick Start bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Type": "String"
        },
        "QSS3KeyPrefix": {
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Default": "quickstart-linux-bastion/",
            "Description": "S3 key prefix for the Quick Start assets. Quick Start key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Type": "String"
        },
        "RemoteAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external SSH access",
            "Type": "String"
        },
        "CordaAccessCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external application access",
            "Type": "String"
        },
        "VPCID": {
            "Description": "ID of the VPC (e.g., vpc-0343606e)",
            "Type": "AWS::EC2::VPC::Id"
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "US1604HVM": "ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180405"
            },
            "ap-northeast-1": {
                "US1604HVM": "ami-60a4b21c"
            },
            "ap-northeast-2": {
                "US1604HVM": "ami-633d920d"
            },
            "ap-south-1": {
                "US1604HVM": "ami-dba580b4"
            },
            "ap-southeast-1": {
                "US1604HVM": "ami-82c9ecfe"
            },
            "ap-southeast-2": {
                "US1604HVM": "ami-2b12dc49"
            },
            "ca-central-1": {
                "US1604HVM": "ami-9d7afcf9"
            },
            "eu-central-1": {
                "US1604HVM": "ami-cd491726"
            },
            "eu-west-1": {
                "US1604HVM": "ami-74e6b80d"
            },
            "eu-west-2": {
                "US1604HVM": "ami-506e8f37"
            },
            "sa-east-1": {
                "US1604HVM": "ami-5782d43b"
            },
            "us-east-1": {
                "US1604HVM": "ami-6dfe5010"
            },
            "us-east-2": {
                "US1604HVM": "ami-e82a1a8d"
            },
            "us-west-1": {
                "US1604HVM": "ami-493f2f29"
            },
            "us-west-2": {
                "US1604HVM": "ami-ca89eeb2"
            }
        }
    },
    "Rules": {
        "SubnetsInVPC": {
            "Assertions": [
                {
                    "Assert": {
                        "Fn::EachMemberIn": [
                            {
                                "Fn::ValueOfAll": [
                                    "AWS::EC2::Subnet::Id",
                                    "VpcId"
                                ]
                            },
                            {
                                "Fn::RefAll": "AWS::EC2::VPC::Id"
                            }
                        ]
                    },
                    "AssertDescription": "All subnets must exist in the VPC"
                }
            ]
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [
                {
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        }
    },
    "Resources": {
        "CordaSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "Enables SSH Access" ,
                "VpcId": {
                    "Ref": "VPCID"
                },
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "10002",
                        "ToPort": "10002",
                        "CidrIp": {
                            "Ref": "CordaAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "10003",
                        "ToPort": "10003",
                        "CidrIp": {
                            "Ref": "CordaAccessCIDR"
                        }
                    },
                    {
                        "IpProtocol": "icmp",
                        "FromPort": "-1",
                        "ToPort": "-1",
                        "CidrIp": {
                            "Ref": "RemoteAccessCIDR"
                        }

                    }
                ]
            }
        },
        "CordaInstance": {
            "Type" : "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPairName"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "US1604HVM"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "SecurityGroupIds" : [
                    {
                        "Ref" : "CordaSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref" : "PublicSubnet1ID"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [ "",
                            [
                                "#!/bin/bash -x",
                                "\n",
                                "echo \"=====================================================================================\"\n",
                                "echo \"\t------------------[] Starting: Load QuickStart Common Utils\"\n",
                                "\n",
                                "QSLOCATION=",
                                {
                                    "Fn::Sub": [
                                        "https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}",
                                        {
                                            "S3Region": {
                                                "Fn::If": [
                                                    "GovCloudCondition",
                                                    "s3-us-gov-west-1",
                                                    "s3"
                                                ]
                                            }
                                        }
                                    ]
                                },
                                "\n",
                                "curl -s {QSLOCATION}submodules/quickstart-linux-utilities/quickstart-cfn-tools.source -o ~/quickstart-cfn-tools.source\n",
                                "source ~/quickstart-cfn-tools.source \n",
                                "echo \"=====================================================================================\"\n",
                                "echo \"\t------------------[] Completed: Load QuickStart Common Utils\"\n"

                            ]
                        ]
                    }
                }
            }
        }
    },
    "Outputs": {
        "CordaInstanceDNSName": {
            "Value": {
                "Fn::GetAtt": [
                    "CordaInstance",
                    "PublicDnsName"
                ]
            },
            "Description": "Public DNS Name for the CordaInstance"
        }
    }
}
