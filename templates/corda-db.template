AWSTemplateFormatVersion: 2010-09-09
Description: 'Corda Node, License: Apache 2.0 (Please do not remove) May,1,2018 (qs-1odje6ci1)'
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VPCID
          - VPCCIDR
          - PublicSubnet1ID
          - PublicSubnet2ID
          - PrivateSubnet1ID
          - PrivateSubnet2ID
          - RemoteAccessCIDR
      - Label:
          default: Corda EC2 Configuration
        Parameters:
          - EmailAddress
          - LegalName
          - KeyPairName
          - CordaAccessCIDR
          - InstanceType
      - Label:
          default: Corda RDS Configuration
        Parameters:
          - DBInstanceClass
          - DBName
          - DBMultiAZ
          - DBMasterUsername
          - DBMasterUserPassword
          - DBAllocatedStorage
          - DBStorageType
          - DBIops
          - DBAutoMinorVersionUpgrade
          - DBBackupRetentionPeriod
      - Label:
          default: AWS Quick Start Configuration
        Parameters:
          - QSS3BucketName
          - QSS3KeyPrefix
    ParameterLabels:
      EmailAddress:
        default: Email address
      LegalName:
        default: Legal name
      KeyPairName:
        default: Key Pair Name
      PublicSubnet1ID:
        default: Public Subnet 1 ID
      PublicSubnet2ID:
        default: Public Subnet 2 ID
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      QSS3BucketName:
        default: Quick Start S3 Bucket Name
      QSS3KeyPrefix:
        default: Quick Start S3 Key Prefix
      RemoteAccessCIDR:
        default: Allowed SSH Access CIDR
      CordaAccessCIDR:
        default: Allowed Corda Access CIDR
      VPCID:
        default: VPC ID
      VPCCIDR:
        default: VPC CIDR
      DBAllocatedStorage:
        default: DB storage size (in GiB)
      DBAutoMinorVersionUpgrade:
        default: Automatic upgrade to new Amazon Aurora/MySQL minor versions
      DBBackupRetentionPeriod:
        default: DB backup retention period
      DBInstanceClass:
        default: Amazon Aurora/MySQL DB instance type
      DBIops:
        default: DB IOPS
      DBMasterUserPassword:
        default: DB master password
      DBMasterUsername:
        default: DB master user name
      DBMultiAZ:
        default: Enable Multi-AZ deployment for DB instance
      DBName:
        default: DB name
      DBStorageType:
        default: DB storage type
Parameters:
  EmailAddress:
   Description: Email address
   Type: String
   AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
   ConstraintDescription: Must be a valid email address.
  LegalName:
   Description: Legal Name
   MaxLength: 128
   Type: String
  InstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
    Default: t2.micro
    Description: Amazon EC2 instance type for the bastion instances
    Type: String
  KeyPairName:
    Description: Enter a Public/private key pair. If you do not have one in this region,
      please create it before continuing
    Type: 'AWS::EC2::KeyPair::KeyName'
  PrivateSubnet1ID:
    Description: Private Subnet Id 1
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet2ID:
    Description: Private Subnet Id 2
    Type: AWS::EC2::Subnet::Id
  PublicSubnet1ID:
    Description: Public Subnet Id 1
    Type: AWS::EC2::Subnet::Id
  PublicSubnet2ID:
    Description: Public Subnet Id 2
    Type: AWS::EC2::Subnet::Id
  PrivateSubnet1CIDR:
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Default: 10.0.0.0/19
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Default: 10.0.32.0/19
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Default: 10.0.128.0/20
    Description: CIDR Block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Default: 10.0.144.0/20
    Description: CIDR Block for the public DMZ subnet 2 located in Availability Zone 2
    Type: String
  DBAllocatedStorage:
    ConstraintDescription: Must be between 5 and 4096 GiB. If Iops specified, AllocatedStorage
      must be at least 100 GiB and with minimum Iops value of 1000
    Default: '16'
    Description: The size of the database in gigabytes (GiB)
    MaxValue: '4096'
    MinValue: '5'
    Type: Number
  DBAutoMinorVersionUpgrade:
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
    Description: Select true/false to setup Auto Minor Version upgrade
    Type: String
  DBBackupRetentionPeriod:
    Default: '7'
    Description: The number of days for which automatic DB snapshots are retained.
    Type: String
  DBEngineType:
    AllowedValues:
    - Amazon Aurora
    - MySQL
    Default: Amazon Aurora
    Description: Database engine to use for Corda database
    Type: String
  DBInstanceClass:
    AllowedValues:
    - db.r4.large
    - db.r4.xlarge
    - db.r4.2xlarge
    - db.r4.4xlarge
    - db.r4.8xlarge
    - db.r4.16xlarge
    ConstraintDescription: Must select a valid postgress database instance type.
    Default: db.r4.large
    Description: The name of the compute and memory capacity class of the DB instance.
    Type: String
  DBIops:
    AllowedValues:
    - '1000'
    - '2000'
    - '3000'
    - '4000'
    - '5000'
    - '6000'
    - '7000'
    - '8000'
    - '9000'
    - '10000'
    ConstraintDescription: '1000 Iops min and increased in 1K increments. '
    Default: '1000'
    Description: DB Iops. Used only when io1 specified for the StorageType property
    Type: Number
  DBMasterUserPassword:
    AllowedPattern: (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    ConstraintDescription: Must be at least 8 characters containing letters, numbers
      and symbols.
    Description: The database admin account password. Must be at least 8 characters
      containing letters, numbers and symbols
    MaxLength: '32'
    MinLength: '8'
    NoEcho: 'True'
    Type: String
  DBMasterUsername:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters.
    Default: aurorapg
    Description: The database admin account username
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  DBMultiAZ:
    AllowedValues:
    - 'true'
    - 'false'
    Default: 'true'
    Description: Specifies if the database instance is a multiple Availability Zone
      deployment.
    Type: String
  DBName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: Must begin with a letter and contain only alphanumeric
      characters.
    Default: CordaQuickstartDB
    Description: Name of Corda Quick Start database.
    MaxLength: '64'
    MinLength: '5'
    Type: String
  DBStorageType:
    AllowedValues:
    - standard
    - gp2
    - io1
    Default: gp2
    Description: The storage type associated with this database instance
    Type: String
  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription: >-
      Quick Start bucket name can include numbers, lowercase letters, uppercase
      letters, and hyphens (-). It cannot start or end with a hyphen (-).
    Default: aws-quickstart
    Description: >-
      S3 bucket name for the Quick Start assets. Quick Start bucket name can
      include numbers, lowercase letters, uppercase letters, and hyphens (-). It
      cannot start or end with a hyphen (-).
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription: >-
      Quick Start key prefix can include numbers, lowercase letters, uppercase
      letters, hyphens (-), and forward slash (/).
    Default: quickstart-r3-corda/
    Description: >-
      S3 key prefix for the Quick Start assets. Quick Start key prefix can
      include numbers, lowercase letters, uppercase letters, hyphens (-), and
      forward slash (/).
    Type: String
  RemoteAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for external SSH access
    Type: String
  CordaAccessCIDR:
    AllowedPattern: >-
      ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/x
    Description: Allowed CIDR block for Corda access
    Type: String
  VPCID:
    Description: 'ID of the VPC (e.g., vpc-0343606e)'
    Type: 'AWS::EC2::VPC::Id'
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/([0-9]|[1-2][0-9]|3[0-2]))$
    ConstraintDescription: Must be a valid IP range in x.x.x.x/x notation
    Description: The CIDR IP range of VPC
    Type: String
Mappings:
  AWSAMIRegionMap:
    AMI:
      US1604HVM: ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-20180405
    ap-northeast-1:
      US1604HVM: ami-60a4b21c
    ap-northeast-2:
      US1604HVM: ami-633d920d
    ap-south-1:
      US1604HVM: ami-dba580b4
    ap-southeast-1:
      US1604HVM: ami-82c9ecfe
    ap-southeast-2:
      US1604HVM: ami-2b12dc49
    ca-central-1:
      US1604HVM: ami-9d7afcf9
    eu-central-1:
      US1604HVM: ami-cd491726
    eu-west-1:
      US1604HVM: ami-74e6b80d
    eu-west-2:
      US1604HVM: ami-506e8f37
    sa-east-1:
      US1604HVM: ami-5782d43b
    us-east-1:
      US1604HVM: ami-6dfe5010
    us-east-2:
      US1604HVM: ami-e82a1a8d
    us-west-1:
      US1604HVM: ami-493f2f29
    us-west-2:
      US1604HVM: ami-ca89eeb2
Rules:
  SubnetsInVPC:
    Assertions:
      - Assert:
          'Fn::EachMemberIn':
            - 'Fn::ValueOfAll':
                - 'AWS::EC2::Subnet::Id'
                - VpcId
            - 'Fn::RefAll': 'AWS::EC2::VPC::Id'
        AssertDescription: All subnets must exist in the VPC
Conditions:
  GovCloudCondition: !Equals
    - !Ref AWS::Region
    - us-gov-west-1
Resources:
  CordaSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enables SSH Access
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: !Ref RemoteAccessCIDR
        - IpProtocol: tcp
          FromPort: '10002'
          ToPort: '10002'
          CidrIp: !Ref CordaAccessCIDR
        - IpProtocol: tcp
          FromPort: '10003'
          ToPort: '10003'
          CidrIp: !Ref CordaAccessCIDR
        - IpProtocol: icmp
          FromPort: '-1'
          ToPort: '-1'
          CidrIp: !Ref RemoteAccessCIDR
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to MySQL Port (AWS Quick Start)
      VpcId: !Ref VPCID
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '3306'
          ToPort: '3306'
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0
  RDSStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        Fn::Sub:
        - https://${QSS3BucketName}.${QSS3Region}.amazonaws.com/${QSS3KeyPrefix}templates/rds.template
        - QSS3Region:
            Fn::If:
            - GovCloudCondition
            - s3-us-gov-west-1
            - s3
      Parameters:
        RDSSecurityGroup: !Ref RDSSecurityGroup
        Subnets: !Sub ${PrivateSubnet1ID},${PrivateSubnet2ID}
        DBAllocatedStorage: !Ref DBAllocatedStorage
        DBAutoMinorVersionUpgrade: !Ref DBAutoMinorVersionUpgrade
        DBBackupRetentionPeriod: !Ref DBBackupRetentionPeriod
        DBInstanceClass: !Ref DBInstanceClass
        DBName: !Ref DBName
        DBIops: !Ref DBIops
        DBMasterUsername: !Ref DBMasterUsername
        DBMasterUserPassword: !Ref DBMasterUserPassword
        DBMultiAZ: !Ref DBMultiAZ
        DBStorageType: !Ref DBStorageType
  EIP:
    Type: "AWS::EC2::EIP"
    Properties:
      InstanceId: !Ref CordaInstance
  CordaInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          corda_install:
            - corda_jar
            - run_install
            - systemd_config-corda
            - systemd_config-corda-webserver
            - run_service-corda
            - run_service-corda-webserver
        systemd_config-corda:
          files:
            /etc/systemd/system/corda.service:
              source: !Sub
                - >-
                  https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}scripts/corda.service
                - QSS3BucketName: !Ref QSS3BucketName
                  QSS3KeyPrefix: !Ref QSS3KeyPrefix
              mode: '000664'
              owner: root
              group: root
        systemd_config-corda-webserver:
          files:
            /etc/systemd/system/corda-webserver.service:
              source: !Sub
                - >-
                  https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}scripts/corda-webserver.service
                - QSS3BucketName: !Ref QSS3BucketName
                  QSS3KeyPrefix: !Ref QSS3KeyPrefix
              mode: '000664'
              owner: root
              group: root
        corda_jar:
          packages:
            apt:
              openjdk-8-jdk: []
              wget: []
          files:
            /home/ubuntu/install_corda.sh:
              source: !Sub
                - >-
                  https://s3.amazonaws.com/${QSS3BucketName}/${QSS3KeyPrefix}scripts/install_corda.sh
                - QSS3BucketName: !Ref QSS3BucketName
                  QSS3KeyPrefix: !Ref QSS3KeyPrefix
              mode: '000755'
              owner: root
              group: root
        run_install:
          commands:
            start_install:
              command: bash /home/ubuntu/install_corda.sh
        run_service-corda:
          commands:
            start_corda :
              command: systemctl start corda.service
        run_service-corda-webserver:
          commands:
            start_corda-weberver :
              command: systemctl start corda-webserver.service
    Properties:
      KeyName: !Ref KeyPairName
      ImageId: !FindInMap
        - AWSAMIRegionMap
        - !Ref 'AWS::Region'
        - US1604HVM
      InstanceType: !Ref InstanceType
      BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
            VolumeSize: '100'
      SecurityGroupIds:
        - !Ref CordaSecurityGroup
      SubnetId: !Ref PublicSubnet1ID
      UserData: !Base64
        Fn::Sub:
          - |
            #!/bin/bash -x
            #CFN Functions
            function cfn_fail
            {
            cfn-signal -e 1 --stack ${AWS::StackName} --region ${AWS::Region} --resource CordaInstance
            exit 1
            }
            function cfn_success
            {
            cfn-signal -e 0 --stack ${AWS::StackName} --region ${AWS::Region} --resource CordaInstance
            exit 0
            }
            S3URI=https://${QSS3BucketName}.${S3Region}.amazonaws.com/${QSS3KeyPrefix}
            NODE_CONF=${!S3URI}scripts/node.conf_stub
            echo \'[Cloning: Load QuickStart Common Utils]\'
            #Once Repo is public (Use quickstart-linux-utilities submodue)
            git clone -b develop https://github.com/aws-quickstart/quickstart-linux-utilities.git
            source /quickstart-linux-utilities/quickstart-cfn-tools.source
            echo \'[Loaded: Load QuickStart Common Utils]\'
            echo \'[Update Operating System]\'
            qs_update-os || qs_error
            qs_bootstrap_pipa || qs_error
            qs_aws-cfn-bootstrap || qs_error
            cfn-init -v --stack ${AWS::StackName} --resource CordaInstance --configsets corda_install --region ${AWS::Region} || cfn_fail
            # Generate node.conf
            wget ${!NODE_CONF} -O /opt/corda/node.conf
            sed -i "s/__EMAILADDRESS__/${EmailAddress}/g" /opt/corda/node.conf
            sed -i "s/__LEGALNAME__/${LegalName}/g" /opt/corda/node.conf
            sed -i "s/__IPADDRESS__/$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)/g" /opt/corda/node.conf
            # Add RDS
            sed -i "s,__DATASOURCE_URL__,${RDSStack.Outputs.RDSEndPoints},g" /opt/corda/node.conf
            sed -i "s,__DATASOURCE_USER__,${DBMasterUsername},g" /opt/corda/node.conf
            sed -i "s,__DATASOURCE_PASSWORD__,${DBMasterUserPassword},g" /opt/corda/node.conf
            # Signal cfn-init (final check)
            [ $(qs_status) == 0 ] && cfn_success || cfn_fail
          - S3Region: !If [ GovCloudCondition, s3-us-gov-west-1, s3 ]
            RDSEndPointUrl: !GetAtt RDSStack.Outputs.RDSEndPoints
Outputs:
  CordaInstancePublicDnsName:
    Value: !GetAtt
      - CordaInstance
      - PublicDnsName
    Description: Public DNS Name for the Corda Instance
  CordaInstancePublicIPAddress:
    Value: !Sub 'ubuntu@${CordaInstance.PublicIp}'
    Description: Public IP address for the Corda instance

